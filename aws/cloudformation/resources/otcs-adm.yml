AWSTemplateFormatVersion: "2010-09-09"
Mappings: 
  RegionMap: 
    us-east-1: 
      AMI: "ami-0e95e4dbc9cb6ac8d"
      Az: "us-east-1a"
    us-west-2: 
      AMI: "ami-a0cfeed8"
      Az: "us-west-2a"
Parameters: 
  EnvType: 
    Description: Environment type.
    Default: DEV
    Type: String
    AllowedValues: 
      - PROD
      - UAT
      - TEST
      - DEV
    ConstraintDescription: must specify prod or test.
  VpcId:
    Type: String
    Description: "Id of the VPC to use"
    Default: vpc-06be58ee957419017
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select atleast two private subnets in your selected VPC.
  Keyname:
    Type: String
    Description: "Name of the keypair"
    Default: ava-debug
  InstanceType:
    Type: String
    Description: "Name of the keypair"
    Default: m5d.xlarge

Resources:
  OTCSADMSecurityGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - CidrIp: 10.0.0.0/8
        # FromPort: 22
        IpProtocol: -1
        # ToPort: 22
      # - CidrIp: 0.0.0.0/0
      #   FromPort: 80
      #   IpProtocol: tcp
      #   ToPort: 80

  OTCSADM: 
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      InstanceType: !Ref InstanceType
      KeyName: !Ref Keyname  ## this should be parameterised
      SecurityGroupIds: 
        - !Ref OTCSADMSecurityGrp
      SubnetId: !Select [0, !Ref SubnetIds]
      Tags:
        -
          Key: Name
          Value: !Join [ '-', [OTCSADM, !Ref EnvType] ]
        -
          Key: App
          Value: AV2.0

  MountPoint1: 
    Type: "AWS::EC2::VolumeAttachment"
    Properties: 
      InstanceId: 
        !Ref OTCSADM
      VolumeId: 
        !Ref app
      Device: /dev/sdf
  MountPoint2: 
    Type: "AWS::EC2::VolumeAttachment"
    Properties: 
      InstanceId: 
        !Ref OTCSADM
      VolumeId: 
        !Ref csefs
      Device: /dev/sdg
  MountPoint3: 
    Type: "AWS::EC2::VolumeAttachment"
    Properties: 
      InstanceId: 
        !Ref OTCSADM
      VolumeId: 
        !Ref csindex
      Device: /dev/sdh
  MountPoint4: 
    Type: "AWS::EC2::VolumeAttachment"
    Properties: 
      InstanceId: 
        !Ref OTCSADM
      VolumeId: 
        !Ref csindexbackup
      Device: /dev/sdi
  MountPoint5: 
    Type: "AWS::EC2::VolumeAttachment"
    Properties: 
      InstanceId: 
        !Ref OTCSADM
      VolumeId: 
        !Ref migration
      Device: /dev/sdj

  app: 
    Type: "AWS::EC2::Volume"
    Properties: 
      Size: 100
      AvailabilityZone: 
        !GetAtt OTCSADM.AvailabilityZone
      Tags:
        -
          Key: Name
          Value: !Join [ '-', [OTCSADM, !Ref EnvType, /dev/sdf]]
        -
          Key: App
          Value: AV2.0
  csefs: 
    Type: "AWS::EC2::Volume"
    Properties: 
      Size: 100
      AvailabilityZone: 
        !GetAtt OTCSADM.AvailabilityZone
      Tags:
        -
          Key: Name
          Value: !Join [ '-', [OTCSADM, !Ref EnvType, '/dev/sdg'] ]
        -
          Key: App
          Value: AV2.0
  csindex: 
    Type: "AWS::EC2::Volume"
    Properties: 
      Size: 70
      AvailabilityZone: 
        !GetAtt OTCSADM.AvailabilityZone
      Tags:
        -
          Key: Name
          Value: !Join [ '-', [OTCSADM, !Ref EnvType, '/dev/sdh'] ]
        -
          Key: App
          Value: AV2.0
  csindexbackup: 
    Type: "AWS::EC2::Volume"
    Properties: 
      Size: 100
      AvailabilityZone: 
        !GetAtt OTCSADM.AvailabilityZone
      Tags:
        -
          Key: Name
          Value: !Join [ '-', [OTCSADM, !Ref EnvType, '/dev/sdi'] ]
  migration: 
    Type: "AWS::EC2::Volume"
    Properties: 
      Size: 2000
      Encrypted: True
      VolumeType: gp2
      AvailabilityZone: 
        !GetAtt OTCSADM.AvailabilityZone
      Tags:
        -
          Key: Name
          Value: !Join [ '-', [OTCSADM, !Ref EnvType, '/dev/sdj'] ]
Outputs:
  OTCSADMSecurityGroup:
    Value:
      !Ref OTCSADMSecurityGrp
      
